

import { useState, useEffect } from 'react';
import { HeartIcon } from '@heroicons/react/24/outline';

export default function TatianaMessage({ 
  demographics, 
  surveyType, 
  surveyResults, 
  isVisible 
}) {
  const [message, setMessage] = useState('');
  const [isTyping, setIsTyping] = useState(false);

  useEffect(() => {
    if (isVisible && demographics && surveyType) {
      generateMessage();
    }
  }, [isVisible, demographics, surveyType, surveyResults]);

  const generateMessage = () => {
    setIsTyping(true);
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–µ—á–∞—Ç–∞–Ω–∏–µ
    setTimeout(() => {
      const personalizedMessage = createPersonalizedMessage();
      setMessage(personalizedMessage);
      setIsTyping(false);
    }, 1500);
  };

  const createPersonalizedMessage = () => {
    const { name } = demographics;
    
    let baseMessage = `–ü—Ä–∏–≤–µ—Ç, ${name}! üëã\n\n`;
    
    // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –æ–ø—Ä–æ—Å–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    switch (surveyType) {
      case 'attitude':
        baseMessage += generateAttitudeMessage(surveyResults);
        break;
      case 'typology':
        baseMessage += generateTypologyMessage(surveyResults);
        break;
      case 'values':
        baseMessage += generateValuesMessage(surveyResults);
        break;
      default:
        baseMessage += `–Ø –±—É–¥—É —Ä–∞–¥–∞ –ø–æ–º–æ—á—å –≤–∞–º –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. `;
    }

    // –ó–∞–≤–µ—Ä—à–∞—é—â–∞—è —á–∞—Å—Ç—å —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    baseMessage += generateIntegrationMessage();
    baseMessage += `\n\n–¢–µ–ø–µ—Ä—å —è –ø–æ–Ω–∏–º–∞—é –≤–∞—Å –≥–æ—Ä–∞–∑–¥–æ –ª—É—á—à–µ –∏ –±—É–¥—É –æ–±—â–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –≤ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–º —Å—Ç–∏–ª–µ. `;
    baseMessage += `–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞, —è –∑–¥–µ—Å—å –¥–ª—è –≤–∞—Å! üíô`;

    return baseMessage;
  };

  const generateAttitudeMessage = (results) => {
    if (!results || !results.scales) {
      return `–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –±–æ–ª–µ–∑–Ω–∏ - —ç—Ç–æ –æ—á–µ–Ω—å –ª–∏—á–Ω–∞—è —Ç–µ–º–∞. `;
    }
    
    let message = `–ò—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ–± –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∫ –±–æ–ª–µ–∑–Ω–∏, —è –≤–∏–∂—É —Å–ª–µ–¥—É—é—â–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:\n\n`;
    
    const scales = results.scales;
    const insights = [];
    
    // –ê–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö —à–∫–∞–ª —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    if (scales.severity !== undefined) {
      if (scales.severity > 7) {
        insights.push({
          trait: "–≤—ã—Å–æ–∫–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è",
          approach: "–±—É–¥—É –æ—Å–æ–±–µ–Ω–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞ –∫ –≤–∞—à–∏–º –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º, –¥–∞–≤–∞—Ç—å —á–µ—Ç–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—â—É—â–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        });
      } else if (scales.severity < 4) {
        insights.push({
          trait: "–æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ",
          approach: "–ø–æ–¥–¥–µ—Ä–∂—É –≤–∞—à –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π, –Ω–æ —Ç–∞–∫–∂–µ –ø–æ–º–æ–≥—É –Ω–µ —É–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è"
        });
      }
    }
    
    if (scales.anxiety !== undefined && scales.anxiety > 5) {
      insights.push({
        trait: "—Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏",
        approach: "–±—É–¥—É –¥–∞–≤–∞—Ç—å —á–µ—Ç–∫—É—é, –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—â—É—â–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ—à–∞–≥–æ–≤–æ –æ–±—ä—è—Å–Ω—è—Ç—å –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø"
      });
    }
    
    if (scales.secondary_gain !== undefined && scales.secondary_gain > 3) {
      insights.push({
        trait: "–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –±–æ–ª–µ–∑–Ω–∏ –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
        approach: "–±—É–¥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—Å, –Ω–æ —Ç–∞–∫–∂–µ –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –∑–¥–æ—Ä–æ–≤—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è –∏ –∑–∞–±–æ—Ç—ã –æ—Ç –±–ª–∏–∑–∫–∏—Ö"
      });
    }
    
    if (scales.hide_resist !== undefined && scales.hide_resist > 5) {
      insights.push({
        trait: "—Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—å –±–æ–ª–µ–∑–Ω—å",
        approach: "–±—É–¥—É –æ—Å–æ–±–µ–Ω–Ω–æ –¥–µ–ª–∏–∫–∞—Ç–Ω–∞, —Å–æ–∑–¥–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏ –ø–æ–º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é"
      });
    }
    
    if (scales.work_escape !== undefined && scales.work_escape > 5) {
      insights.push({
        trait: "—Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å —É—Ö–æ–¥–∏—Ç—å –≤ —Ä–∞–±–æ—Ç—É",
        approach: "–±—É–¥—É —É–≤–∞–∂–∞—Ç—å –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –Ω–æ –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–æ–π –∏ –∑–¥–æ—Ä–æ–≤—å–µ–º, –¥–∞–≤–∞—è –≥–∏–±–∫–∏–µ –ø–ª–∞–Ω—ã –ª–µ—á–µ–Ω–∏—è"
      });
    }
    
    if (insights.length === 0) {
      message += "—É –≤–∞—Å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∑–¥–æ—Ä–æ–≤—å—é. ";
      message += "–Ø –±—É–¥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—à —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –ø–æ–º–æ–≥–∞—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. ";
    } else {
      insights.forEach((insight, index) => {
        message += `‚Ä¢ ${insight.trait}: ${insight.approach}.\n`;
      });
    }
    
    return message;
  };

  const generateTypologyMessage = (results) => {
    if (!results || !results.dominant_type) {
      return `–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ —É–Ω–∏–∫–∞–ª–µ–Ω –≤ —Å–≤–æ–µ–º –≤–æ—Å–ø—Ä–∏—è—Ç–∏–∏ –º–∏—Ä–∞. `;
    }
    
    let message = `–ê–Ω–∞–ª–∏–∑–∏—Ä—É—è –≤–∞—à –ø—Å–∏—Ö–æ—Ç–∏–ø, —è –≤—ã—è–≤–∏–ª–∞ —Å–ª–µ–¥—É—é—â–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:\n\n`;
    
    const dominantType = results.dominant_type;
    const typeInsights = {
      'sensitive': {
        trait: "–≤—ã –æ—á–µ–Ω—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∏ —Ä–∞–Ω–∏–º—ã–π —á–µ–ª–æ–≤–µ–∫",
        approach: "–±—É–¥—É –æ–±—â–∞—Ç—å—Å—è –æ—Å–æ–±–µ–Ω–Ω–æ –±–µ—Ä–µ–∂–Ω–æ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º—è–≥–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å –≤–∞—à–∏ —á—É–≤—Å—Ç–≤–∞ –∏ –∏–∑–±–µ–≥–∞—Ç—å —Ä–µ–∑–∫–∏—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫"
      },
      'dysthymic': {
        trait: "–≤—ã —Å–∫–ª–æ–Ω–Ω—ã –∫ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–µ –∏ —á–∞—Å—Ç–æ –≤–∏–Ω–∏—Ç–µ —Å–µ–±—è",
        approach: "–±—É–¥—É –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—Ç—å –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –¥–∞–≤–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–∏–º—ã–µ —à–∞–≥–∏ –∏ –ø–æ–º–æ–≥–∞—Ç—å –≤–∏–¥–µ—Ç—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Å–∏—Ç—É–∞—Ü–∏–∏"
      },
      'demonstrative': {
        trait: "–≤—ã –ª—é–±–∏—Ç–µ –±—ã—Ç—å –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ",
        approach: "–±—É–¥—É –¥–∞–≤–∞—Ç—å –≤–∞–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —É—Å–ø–µ—Ö–∞–º–∏, –ø—Ä–∏–∑–Ω–∞–≤–∞—Ç—å –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è"
      },
      'excitable': {
        trait: "–≤—ã –∏–º–ø—É–ª—å—Å–∏–≤–Ω—ã –∏ –ª—é–±–∏—Ç–µ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –±—ã—Å—Ç—Ä–æ",
        approach: "–±—É–¥—É –¥–∞–≤–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–µ —á–µ—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –ø–æ–º–æ–≥–∞—Ç—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤–∏–π –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã"
      },
      'cyclothymic': {
        trait: "—É –≤–∞—Å –ø–µ—Ä–µ–º–µ–Ω—á–∏–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
        approach: "–±—É–¥—É –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–º—É —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é, –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –≥–∏–±–∫–∏–µ –ø–ª–∞–Ω—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤ –ø–µ—Ä–∏–æ–¥—ã —Å–ø–∞–¥–∞"
      },
      'stuck': {
        trait: "–≤—ã —É–ø–æ—Ä–Ω—ã –∏ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω—ã",
        approach: "–±—É–¥—É —É–≤–∞–∂–∞—Ç—å –≤–∞—à–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã, –ø–æ–º–æ–≥–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —É–ø–æ—Ä—Å—Ç–≤–æ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–µ —Ä—É—Å–ª–æ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã"
      },
      'pedantic': {
        trait: "–≤—ã –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –∏ –ª—é–±–∏—Ç–µ –ø–æ—Ä—è–¥–æ–∫",
        approach: "–±—É–¥—É –¥–∞–≤–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å"
      },
      'anxious': {
        trait: "–≤—ã —Å–∫–ª–æ–Ω–Ω—ã –∫ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤—É –∏ –º–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
        approach: "–±—É–¥—É —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—â—É—â–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –¥–∞–≤–∞—Ç—å —á–µ—Ç–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∏ –ø–æ—à–∞–≥–æ–≤–æ –æ–±—ä—è—Å–Ω—è—Ç—å –∫–∞–∂–¥—ã–π –ø—Ä–æ—Ü–µ—Å—Å"
      },
      'hyperthymic': {
        trait: "–≤—ã —ç–Ω–µ—Ä–≥–∏—á–Ω—ã –∏ –æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã",
        approach: "–±—É–¥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—à —ç–Ω—Ç—É–∑–∏–∞–∑–º, –ø–æ–º–æ–≥–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å —ç–Ω–µ—Ä–≥–∏—é –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–µ —Ä—É—Å–ª–æ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–Ω—ã–µ –ø–ª–∞–Ω—ã"
      }
    };
    
    const insight = typeInsights[dominantType];
    if (insight) {
      message += `‚Ä¢ ${insight.trait}: ${insight.approach}.\n`;
    } else {
      message += "–∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ —É–Ω–∏–∫–∞–ª–µ–Ω –≤ —Å–≤–æ–µ–º –≤–æ—Å–ø—Ä–∏—è—Ç–∏–∏ –º–∏—Ä–∞. ";
      message += "–Ø –±—É–¥—É –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –ø–æ–¥ –≤–∞—à–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏. ";
    }
    
    return message;
  };

  const generateValuesMessage = (results) => {
    if (!results || !results.indices) {
      return `–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. `;
    }
    
    let message = `–ê–Ω–∞–ª–∏–∑–∏—Ä—É—è –≤–∞—à—É —Å–∏—Å—Ç–µ–º—É —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π, —è –≤—ã—è–≤–∏–ª–∞ —Å–ª–µ–¥—É—é—â–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:\n\n`;
    
    const indices = results.indices;
    const insights = [];
    
    // –ê–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤
    if (indices.life_satisfaction !== undefined) {
      if (indices.life_satisfaction > 0.6) {
        insights.push({
          trait: "–≤—ã –¥–æ–≤–æ–ª—å–Ω—ã —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –±—É–¥—É—â–µ–µ —Å –æ–ø—Ç–∏–º–∏–∑–º–æ–º",
          approach: "–±—É–¥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—à –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π –∏ –ø–æ–º–æ–≥–∞—Ç—å —É–∫—Ä–µ–ø–ª—è—Ç—å —Ç–æ, —á—Ç–æ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ö–æ—Ä–æ—à–æ"
        });
      } else if (indices.life_satisfaction < 0.3) {
        insights.push({
          trait: "–≤—ã –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç–µ —Å–ª–æ–∂–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ –∂–∏–∑–Ω–∏",
          approach: "–±—É–¥—É –æ—Å–æ–±–µ–Ω–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞ –∫ –≤–∞—à–∏–º —á—É–≤—Å—Ç–≤–∞–º, –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–∞–¥–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
        });
      }
    }
    
    if (indices.future_orientation !== undefined) {
      if (indices.future_orientation > 0.5) {
        insights.push({
          trait: "–≤—ã –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ –∏ —Å—Ç–∞–≤–∏—Ç–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ü–µ–ª–∏",
          approach: "–±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —ç—Ç–∏—Ö —Ü–µ–ª–µ–π, —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"
        });
      } else {
        insights.push({
          trait: "–≤—ã –±–æ–ª—å—à–µ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω—ã –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–µ–º –º–æ–º–µ–Ω—Ç–µ",
          approach: "–±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å –Ω–∞—Ö–æ–¥–∏—Ç—å –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º–∏ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏"
        });
      }
    }
    
    if (indices.self_attitude !== undefined) {
      if (indices.self_attitude > 0.6) {
        insights.push({
          trait: "—É –≤–∞—Å –∑–¥–æ—Ä–æ–≤–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–µ–±–µ –∏ –≤—ã—Å–æ–∫–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞",
          approach: "–±—É–¥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—à—É —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø–æ–º–æ–≥–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã"
        });
      } else {
        insights.push({
          trait: "–≤—ã –∏–Ω–æ–≥–¥–∞ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å –≤ —Å–µ–±–µ",
          approach: "–±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞, —Ä–∞–∑–≤–∏–≤–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–∑–Ω–∞–≤–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"
        });
      }
    }
    
    if (indices.treatment_attitude !== undefined) {
      if (indices.treatment_attitude > 0.5) {
        insights.push({
          trait: "–≤—ã –ø–æ–∑–∏—Ç–∏–≤–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ª–µ—á–µ–Ω–∏—é –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø–æ–º–æ—â–∏",
          approach: "–±—É–¥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∫ –º–µ–¥–∏—Ü–∏–Ω–µ –∏ –ø–æ–º–æ–≥–∞—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"
        });
      } else {
        insights.push({
          trait: "—É –≤–∞—Å –µ—Å—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –ª–µ—á–µ–Ω–∏—è",
          approach: "–±—É–¥—É –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω—è—Ç—å –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—â—É—â–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        });
      }
    }
    
    if (insights.length === 0) {
      message += "—É –≤–∞—Å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π. ";
      message += "–Ø –±—É–¥—É –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–∞—à –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∂–∏–∑–Ω–∏ –∏ –ø–æ–º–æ–≥–∞—Ç—å –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π. ";
    } else {
      insights.forEach((insight, index) => {
        message += `‚Ä¢ ${insight.trait}: ${insight.approach}.\n`;
      });
    }
    
    return message;
  };

  const generateIntegrationMessage = () => {
    let message = `\n\n–ù–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –º–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è —Å –≤–∞–º–∏ –±—É–¥–µ—Ç –≤–∫–ª—é—á–∞—Ç—å:\n`;
    
    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞
    message += `‚Ä¢ –ê–¥–∞–ø—Ç–∞—Ü–∏—é —Ç–æ–Ω–∞ –∏ —Ç–µ–º–ø–∞ —Ä–µ—á–∏ –ø–æ–¥ –≤–∞—à–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏\n`;
    message += `‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–ª—è –≤–∞—Å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ –∏ –ø—Ä–∏–º–µ—Ä–æ–≤\n`;
    message += `‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞\n`;
    message += `‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –æ–±—ä—è—Å–Ω–µ–Ω–∏—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n`;
    
    return message;
  };

  if (!isVisible || !demographics || !surveyType) {
    return null;
  }

  return (
    <div className="bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg border border-purple-200 p-6 mb-6">
      <div className="flex items-start space-x-4">
        {/* –ê–≤–∞—Ç–∞—Ä –¢–∞—Ç—å—è–Ω—ã */}
        <div className="flex-shrink-0">
          <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-blue-600 rounded-full flex items-center justify-center">
            <HeartIcon className="w-6 h-6 text-white" />
          </div>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è */}
        <div className="flex-1 min-w-0">
          <div className="flex items-center space-x-2 mb-2">
            <h3 className="text-lg font-semibold text-gray-900">–¢–∞—Ç—å—è–Ω–∞</h3>
            <span className="text-sm text-gray-500">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç</span>
          </div>

          {isTyping ? (
            <div className="flex items-center space-x-2 text-gray-600">
              <div className="flex space-x-1">
                <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
              </div>
              <span>–¢–∞—Ç—å—è–Ω–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...</span>
            </div>
          ) : (
            <div className="text-gray-700 whitespace-pre-line leading-relaxed">
              {message}
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
