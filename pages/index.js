// pages/index.js
'use client';

import { useEffect, useRef, useState } from 'react';
import Link from 'next/link';
import OnboardingCard from '../components/OnboardingCard';
import ProfilingProgress from '../components/ProfilingProgress';

export default function Home() {
  const [messages, setMessages] = useState([
    {
      role: 'assistant',
      content:
        '–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –¢–∞—Ç—å—è–Ω–∞, —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é. –†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç. –ï—Å–ª–∏ —Å—Ç–∞–Ω–µ—Ç —Å–æ–≤—Å–µ–º –ø–ª–æ—Ö–æ ‚Äî –Ω–∞–∂–º–∏ SOS.',
    },
  ]);
  const [input, setInput] = useState('');
  const [loading, setLoading] = useState(false);

  // –í–µ—Å—å –¥–æ—Å—Ç—É–ø –∫ localStorage ‚Äî —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –∏ –≤–Ω—É—Ç—Ä–∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
  const [demoDone, setDemoDone] = useState(false);
  const [needProfiling, setNeedProfiling] = useState(false);
  const [pib, setPib] = useState(null);

  useEffect(() => {
    if (typeof window === 'undefined') return;
    const demo = !!localStorage.getItem('benehab_demographics');
    const haveA = !!localStorage.getItem('benehab_attitude_profile');
    const haveT = !!localStorage.getItem('benehab_typology_profile');
    const haveV = !!localStorage.getItem('benehab_values_profile');
    const pibData = localStorage.getItem('benehab.pib');
    
    console.log('üîç Debug localStorage:', { demo, haveA, haveT, haveV, needProfiling: !(haveA && haveT && haveV) });
    
    setDemoDone(demo);
    setNeedProfiling(!(haveA && haveT && haveV));
    
    if (pibData) {
      try {
        setPib(JSON.parse(pibData));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ PIB:', error);
      }
    }
  }, []);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π useEffect –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ localStorage
  useEffect(() => {
    if (typeof window === 'undefined') return;
    
    const checkProfiles = () => {
      const haveA = !!localStorage.getItem('benehab_attitude_profile');
      const haveT = !!localStorage.getItem('benehab_typology_profile');
      const haveV = !!localStorage.getItem('benehab_values_profile');
      const newNeedProfiling = !(haveA && haveT && haveV);
      
      console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π:', { haveA, haveT, haveV, newNeedProfiling, current: needProfiling });
      
      if (newNeedProfiling !== needProfiling) {
        setNeedProfiling(newNeedProfiling);
        console.log('‚úÖ needProfiling –æ–±–Ω–æ–≤–ª–µ–Ω:', newNeedProfiling);
      }
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    const interval = setInterval(checkProfiles, 2000);
    
    return () => clearInterval(interval);
  }, [needProfiling]);

  const listRef = useRef(null);
  useEffect(() => {
    if (listRef.current) listRef.current.scrollTop = listRef.current.scrollHeight;
  }, [messages]);

  const getPIB = async () => {
    if (pib) return pib;
    
    if (typeof window === 'undefined') return null;
    const A = JSON.parse(localStorage.getItem('benehab_attitude_profile') || 'null');
    const B = JSON.parse(localStorage.getItem('benehab_typology_profile') || 'null');
    if (!A && !B) return null;
    
    try {
      const r = await fetch('/api/profiling/pib', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ attitude_profile: A, typology_profile: B }),
      });
      const d = await r.json();
      if (d.pib) {
        localStorage.setItem('benehab.pib', JSON.stringify(d.pib));
        setPib(d.pib);
        return d.pib;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è PIB:', error);
    }
    return null;
  };

  const send = async (text) => {
    if (!text.trim()) return;
    const next = [...messages, { role: 'user', content: text }];
    setMessages(next);
    setInput('');
    setLoading(true);
    try {
      const currentPib = await getPIB();
      const r = await fetch('/api/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ messages: next, meta: { pib: currentPib } }),
      });
      const d = await r.json();
      setMessages((m) => [...m, { role: 'assistant', content: d.content || '–ì–æ—Ç–æ–≤–æ.' }]);
    } catch {
      setMessages((m) => [...m, { role: 'assistant', content: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.' }]);
    } finally {
      setLoading(false);
    }
  };

  const handleChipClick = async (intent) => {
    let message = '';
    
    switch (intent) {
      case 'anxious':
        message = '–Ø –æ—á–µ–Ω—å –ø–µ—Ä–µ–∂–∏–≤–∞—é –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ. –ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.';
        break;
      case 'drug_info':
        message = '–†–∞—Å—Å–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç. –ú–Ω–µ –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫–∞–∑–∞–Ω–∏—è—Ö, –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è—Ö –∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–∞—Ö.';
        break;
      case 'where_to_go':
        message = '–ö—É–¥–∞ –º–Ω–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é? –ú–Ω–µ –Ω—É–∂–µ–Ω —Å–æ–≤–µ—Ç –ø–æ –≤—ã–±–æ—Ä—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–ª–∏ –∫–ª–∏–Ω–∏–∫–∏.';
        break;
      case 'book':
        message = '–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É. –ü–æ–º–æ–≥–∏ –º–Ω–µ —Å —ç—Ç–∏–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.';
        break;
      case 'reminder':
        message = '–ù–∞–ø–æ–º–Ω–∏ –º–Ω–µ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞ –ø—Ä–∏–Ω—è—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ.';
        break;
      default:
        message = '–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å.';
    }
    
    await send(message);
  };

  const resetSession = () => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    if (typeof window !== 'undefined') {
      localStorage.removeItem('benehab_demographics');
      localStorage.removeItem('benehab_attitude_profile');
      localStorage.removeItem('benehab_typology_profile');
      localStorage.removeItem('benehab_values_profile');
      localStorage.removeItem('benehab.pib');
      localStorage.removeItem('benehab_attitude_answers');
      localStorage.removeItem('benehab_typology_answers');
      localStorage.removeItem('benehab_values_colors');
      localStorage.removeItem('benehab_values_color_rankings');
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setDemoDone(false);
    setNeedProfiling(false);
    setPib(null);
    setMessages([
      {
        role: 'assistant',
        content:
          '–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –¢–∞—Ç—å—è–Ω–∞, —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é. –†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç. –ï—Å–ª–∏ —Å—Ç–∞–Ω–µ—Ç —Å–æ–≤—Å–µ–º –ø–ª–æ—Ö–æ ‚Äî –Ω–∞–∂–º–∏ SOS.',
      },
    ]);
  };

  return (
    <div className="min-h-screen">
      <div className="max-w-4xl mx-auto p-4 space-y-3">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π —Å–±—Ä–æ—Å–∞ */}
        <div className="flex items-center justify-between bg-white rounded-2xl p-4 shadow-sm">
          <h1 className="text-xl font-semibold text-gray-900">Benehab - –¢–∞—Ç—å—è–Ω–∞</h1>
          {demoDone && (
            <button
              onClick={resetSession}
              className="px-4 py-2 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-colors text-sm"
              title="–°–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏—é –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"
            >
              üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏—é
            </button>
          )}
        </div>

        {!demoDone && <OnboardingCard onDone={(demo) => {
          setDemoDone(true);
          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º needProfiling –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–º–æ
          setTimeout(() => {
            const haveA = !!localStorage.getItem('benehab_attitude_profile');
            const haveT = !!localStorage.getItem('benehab_typology_profile');
            setNeedProfiling(!(haveA && haveT));
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ needProfiling:', { haveA, haveT, needProfiling: !(haveA && haveT) });
          }, 100);
        }} />}

        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {demoDone && (
          <div className="bg-gray-50 border border-gray-200 rounded-2xl p-4 text-xs text-gray-600">
            <div className="font-medium mb-1">üîç –û—Ç–ª–∞–¥–∫–∞:</div>
            <div>demoDone: {demoDone.toString()}</div>
            <div>needProfiling: {needProfiling.toString()}</div>
            <div>–ï—Å—Ç—å attitude: {!!localStorage.getItem('benehab_attitude_profile') ? '‚úÖ' : '‚ùå'}</div>
            <div>–ï—Å—Ç—å typology: {!!localStorage.getItem('benehab_typology_profile') ? '‚úÖ' : '‚ùå'}</div>
            <div>–ï—Å—Ç—å values: {!!localStorage.getItem('benehab_values_profile') ? '‚úÖ' : '‚ùå'}</div>
            <div className="mt-2">
              <button
                onClick={() => {
                  const haveA = !!localStorage.getItem('benehab_attitude_profile');
                  const haveT = !!localStorage.getItem('benehab_typology_profile');
                  const haveV = !!localStorage.getItem('benehab_values_profile');
                  setNeedProfiling(!(haveA && haveT && haveV));
                  console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ needProfiling:', { haveA, haveT, haveV, needProfiling: !(haveA && haveT && haveV) });
                }}
                className="px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs hover:bg-blue-200"
              >
                üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
              </button>
            </div>
          </div>
        )}

        {demoDone && needProfiling && (
          <div className="bg-yellow-50 border border-yellow-200 rounded-2xl p-4 text-sm">
            <div className="font-medium mb-3">
              –ú–æ–∂–Ω–æ —è –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤? –≠—Ç–æ –∑–∞–π–º—ë—Ç 5‚Äì10 –º–∏–Ω—É—Ç –∏ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –≥–æ–≤–æ—Ä–∏—Ç—å —Å —Ç–æ–±–æ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ
              –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ.
            </div>
            <ProfilingProgress />
          </div>
        )}

        {/* –ß–∏–ø—ã-–∏–Ω—Ç–µ–Ω—Ç—ã */}
        {demoDone && !needProfiling && (
          <div className="bg-white rounded-2xl p-4 shadow-sm">
            <div className="text-sm text-gray-600 mb-3">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</div>
            <div className="flex flex-wrap gap-2">
              <button
                onClick={() => handleChipClick('anxious')}
                className="px-3 py-2 bg-red-50 text-red-700 rounded-xl hover:bg-red-100 transition-colors text-sm"
              >
                üò∞ –û—á–µ–Ω—å –ø–µ—Ä–µ–∂–∏–≤–∞—é
              </button>
              <button
                onClick={() => handleChipClick('drug_info')}
                className="px-3 py-2 bg-blue-50 text-blue-700 rounded-xl hover:bg-blue-100 transition-colors text-sm"
              >
                üíä –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç
              </button>
              <button
                onClick={() => handleChipClick('where_to_go')}
                className="px-3 py-2 bg-green-50 text-green-700 rounded-xl hover:bg-green-100 transition-colors text-sm"
              >
                üè• –ö—É–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è
              </button>
              <button
                onClick={() => handleChipClick('book')}
                className="px-3 py-2 bg-purple-50 text-purple-700 rounded-xl hover:bg-purple-100 transition-colors text-sm"
              >
                üìÖ –ó–∞–ø–∏—Å–∞—Ç—å –∫ –≤—Ä–∞—á—É
              </button>
              <button
                onClick={() => handleChipClick('reminder')}
                className="px-3 py-2 bg-orange-50 text-orange-700 rounded-xl hover:bg-orange-100 transition-colors text-sm"
              >
                ‚è∞ –ù–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞
              </button>
              <Link
                href="/communication-instructions"
                className="px-3 py-2 bg-indigo-50 text-indigo-700 rounded-xl hover:bg-indigo-100 transition-colors text-sm"
              >
                üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–±—â–µ–Ω–∏—é
              </Link>
            </div>
          </div>
        )}

        {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {pib && (
          <div className="bg-blue-50 border border-blue-200 rounded-2xl p-4 text-sm">
            <div className="font-medium mb-2 text-blue-900">–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</div>
            <div className="text-blue-800">
              <div>–¢–æ–Ω: <span className="font-medium">{pib.communication_plan?.tone || 'calm_supportive'}</span></div>
              <div>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏: <span className="font-medium">{pib.communication_plan?.session_length || 'medium'}</span></div>
              {pib.communication_plan?.avoid?.length > 0 && (
                <div>–ò–∑–±–µ–≥–∞–µ–º: <span className="font-medium">{pib.communication_plan.avoid.join(', ')}</span></div>
              )}
            </div>
          </div>
        )}

        <div className="bg-slate-100/60 rounded-2xl p-3 h-[60vh] overflow-y-auto border" ref={listRef}>
          <div className="space-y-2">
            {messages.map((m, i) => (
              <div key={i} className="w-full flex justify-start">
                <div
                  className={`max-w-[85%] rounded-2xl shadow p-3 text-sm leading-relaxed ${
                    m.role === 'user' ? 'bg-blue-50 ml-auto' : 'bg-white'
                  }`}
                >
                  {m.content}
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-2xl border shadow-sm p-2 flex items-center gap-2">
          <input
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={(e) => {
              if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                send(input);
              }
            }}
            placeholder="–û–ø–∏—à–∏ —Å–∏–º–ø—Ç–æ–º—ã –∏–ª–∏ –∑–∞–¥–∞–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å‚Ä¶"
            className="flex-1 px-3 py-2 outline-none"
          />
          <button onClick={() => send(input)} disabled={loading} className="px-4 py-2 bg-emerald-600 text-white rounded-xl disabled:opacity-50">
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </div>

        <div className="text-xs text-gray-500">
          –î–µ–º–æ: –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–∞—ë—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞–º –±–µ–∑ –¥–æ–∑–∏—Ä–æ–≤–æ–∫ –∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –ª–µ—á–µ–Ω–∏–µ. –ü—Ä–∏ –æ–ø–∞—Å–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö ‚Äî –≤—ã–∑—ã–≤–∞–π—Ç–µ
          —Å–∫–æ—Ä—É—é.
        </div>
      </div>
    </div>
  );
}
