'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';

export default function TypologySurvey() {
  const router = useRouter();
  const [answers, setAnswers] = useState([]);
  const [loading, setLoading] = useState(false);
  const [items, setItems] = useState({});
  const [progress, setProgress] = useState(0);

  useEffect(() => {
    console.log('üöÄ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç TypologySurvey –∑–∞–≥—Ä—É–∂–µ–Ω');
    console.log('üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ items:', items);
    loadItems();
    loadProgress();
  }, []);

  useEffect(() => {
    updateProgress();
  }, [answers]);

  const loadItems = async () => {
    try {
      console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã —Ç–∏–ø–æ–ª–æ–≥–∏–∏...');
      const response = await fetch('/api/profiling/typology/items');
      const data = await response.json();
      console.log('üìä –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);
      
      if (data.success) {
        setItems(data);
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
        const totalQuestions = data.total || 0;
        setAnswers(Array(totalQuestions).fill(0));
        console.log('‚úÖ –í–æ–ø—Ä–æ—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤:', totalQuestions);
      } else {
        console.error('‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', data.error);
        setItems({});
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤:', error);
      setItems([]);
    }
  };

  const loadProgress = () => {
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem('benehab_typology_answers');
      if (saved) {
        try {
          const parsed = JSON.parse(saved);
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–∫—É—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤–æ–ø—Ä–æ—Å–æ–≤
          if (items.total && parsed.length === items.total) {
            setAnswers(parsed);
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', error);
        }
      }
    }
  };

  const saveProgress = () => {
    if (typeof window !== 'undefined') {
      localStorage.setItem('benehab_typology_answers', JSON.stringify(answers));
    }
  };

  const updateProgress = () => {
    const totalQuestions = items.total || 0;
    const answered = answers.filter(a => a !== 0).length;
    setProgress(totalQuestions > 0 ? (answered / totalQuestions) * 100 : 0);
  };

  const handleAnswer = (questionIndex, value) => {
    const newAnswers = [...answers];
    newAnswers[questionIndex] = value;
    setAnswers(newAnswers);
    saveProgress();
  };

  const canSubmit = answers.filter(a => a !== 0).length > 0;

  const getColumnLabel = (columnNumber) => {
    const labels = {
      1: '–°–µ–Ω–∑–∏—Ç–∏–≤–Ω—ã–π',
      2: '–î–∏—Å—Ç–∏–º–∏—á–µ—Å–∫–∏–π', 
      3: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π',
      4: '–í–æ–∑–±—É–¥–∏–º—ã–π',
      5: '–¢—Ä–µ–≤–æ–∂–Ω—ã–π',
      6: '–ü–µ–¥–∞–Ω—Ç–∏—á–Ω—ã–π',
      7: '–≠–∫–∑–∞–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π',
      8: '–≠–º–æ—Ç–∏–≤–Ω—ã–π',
      9: '–ó–∞—Å—Ç—Ä–µ–≤–∞—é—â–∏–π'
    };
    return labels[columnNumber] || `–ö–æ–ª–æ–Ω–∫–∞ ${columnNumber}`;
  };

  const submitSurvey = async () => {
    if (!canSubmit) return;

    setLoading(true);
    try {
      const response = await fetch('/api/profiling/typology/submit', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ answers })
      });

      if (response.ok) {
        const result = await response.json();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        if (typeof window !== 'undefined') {
          localStorage.setItem('benehab_typology_profile', JSON.stringify(result.profile));
        }

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PIB
        await generatePIB();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —á–∞—Ç—É
        router.push('/');
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setLoading(false);
    }
  };

  const generatePIB = async () => {
    try {
      const attitudeProfile = localStorage.getItem('benehab_attitude_profile');
      const typologyProfile = localStorage.getItem('benehab_typology_profile');
      const demographics = localStorage.getItem('benehab_demographics');

      if (attitudeProfile && typologyProfile) {
        const response = await fetch('/api/profiling/pib', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            attitude_profile: JSON.parse(attitudeProfile),
            typology_profile: JSON.parse(typologyProfile),
            patient_meta: demographics ? JSON.parse(demographics) : {}
          })
        });

        if (response.ok) {
          const result = await response.json();
          localStorage.setItem('benehab.pib', JSON.stringify(result.pib));
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PIB:', error);
    }
  };



  if (!items.total || items.total === 0) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-emerald-600 mx-auto mb-4"></div>
          <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-6xl mx-auto p-4">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-white rounded-2xl p-6 mb-6 shadow-sm">
          <div className="flex items-center justify-between mb-4">
            <h1 className="text-2xl font-semibold text-gray-900">–û–ø—Ä–æ—Å: –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è</h1>
            <Link href="/" className="text-emerald-600 hover:text-emerald-700">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —á–∞—Ç—É
            </Link>
          </div>
          
          {/* –í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ */}
          <div className="bg-red-100 border border-red-300 rounded-lg p-3 mb-4 text-sm">
            <div className="font-bold text-red-800">üö® –û–¢–õ–ê–î–ö–ê:</div>
            <div>items: {JSON.stringify(items)}</div>
            <div>items.columns: {items.columns ? `‚úÖ ${items.columns.length} –∫–æ–ª–æ–Ω–æ–∫` : '‚ùå –ù–ï–¢'}</div>
            <div>items.total: {items.total || '–ù–ï–¢'}</div>
          </div>
          
          <div className="mb-4">
            <div className="flex justify-between text-sm text-gray-600 mb-2">
              <span>–ü—Ä–æ–≥—Ä–µ—Å—Å: {Math.round(progress)}%</span>
              <span>{answers.filter(a => a !== 0).length} –∏–∑ {items.total || 0}</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div 
                className="bg-emerald-600 h-2 rounded-full transition-all duration-300"
                style={{ width: `${progress}%` }}
              ></div>
            </div>
          </div>

          <p className="text-gray-700">
            –û—Ç–º–µ—Ç—å—Ç–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –≤–∞–º. –ù–µ—Ç "–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö" –∏–ª–∏ "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö" –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî 
            —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ –≤–∞—à —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –∏ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
          </p>
        </div>

        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-gray-50 border border-gray-200 rounded-2xl p-4 mb-6 text-xs text-gray-600">
          <div className="font-medium mb-2">üîç –û—Ç–ª–∞–¥–∫–∞ —Ç–∏–ø–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–æ—Å–∞:</div>
          <div>items.total: {items.total || '–ù–ï–¢'}</div>
          <div>items.columns: {items.columns ? `‚úÖ ${items.columns.length} –∫–æ–ª–æ–Ω–æ–∫` : '‚ùå –ù–ï–¢'}</div>
          <div>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫: {items.columns?.length || 0}</div>
          <div>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {items.total || 0}</div>
          <pre className="mt-2 text-xs overflow-auto max-h-32">
            {JSON.stringify(items, null, 2)}
          </pre>
        </div>

        {/* –í–æ–ø—Ä–æ—Å—ã –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º */}
        {items.columns && items.columns.length > 0 ? (
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
            {items.columns.map((column) => (
              <div key={column.column} className="bg-white rounded-2xl p-6 shadow-sm">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">
                  {getColumnLabel(column.column)} ({column.count} –≤–æ–ø—Ä–æ—Å–æ–≤)
                </h3>
                
                <div className="space-y-3">
                  {column.questions.map((item) => {
                    const questionIndex = item.id - 1; // id –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1
                    
                    return (
                      <label key={item.id} className="flex items-start cursor-pointer">
                        <input
                          type="checkbox"
                          checked={answers[questionIndex] === 1}
                          onChange={(e) => handleAnswer(questionIndex, e.target.checked ? 1 : 0)}
                          className="mt-1 h-4 w-4 text-emerald-600 border-gray-300 rounded focus:ring-emerald-500"
                        />
                        <span className="ml-3 text-sm text-gray-700 leading-relaxed">
                          {item.question_text}
                        </span>
                      </label>
                    );
                  })}
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="bg-yellow-50 border border-yellow-200 rounded-2xl p-6 text-center">
            <div className="text-yellow-800 mb-2">‚ö†Ô∏è –í–æ–ø—Ä–æ—Å—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</div>
            <div className="text-sm text-yellow-700">
              {!items.total ? '–î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã' : '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞'}
            </div>
            <button 
              onClick={loadItems} 
              className="mt-3 px-4 py-2 bg-yellow-100 text-yellow-800 rounded-lg hover:bg-yellow-200"
            >
              üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        )}

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="bg-white rounded-2xl p-6 shadow-sm">
          <div className="flex justify-between items-center">
            <Link
              href="/profiling/attitude"
              className="px-6 py-2 border border-gray-300 text-gray-700 rounded-xl hover:border-emerald-400 hover:text-emerald-600 transition-colors"
            >
              ‚Üê –ö –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –æ–ø—Ä–æ—Å—É
            </Link>

            <button
              onClick={submitSurvey}
              disabled={!canSubmit || loading}
              className={`
                px-6 py-2 rounded-xl transition-colors
                ${canSubmit && !loading
                  ? 'bg-emerald-600 text-white hover:bg-emerald-700' 
                  : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                }
              `}
            >
              {loading ? '–ó–∞–≤–µ—Ä—à–∞–µ–º...' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –æ–ø—Ä–æ—Å—ã'}
            </button>
          </div>
        </div>

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
        <div className="text-center text-sm text-gray-500 mt-4">
          –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è. –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –¢–∞—Ç—å—è–Ω–æ–π –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ.
        </div>
      </div>
    </div>
  );
}
