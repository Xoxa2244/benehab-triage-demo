'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import TatianaMessage from '../../components/TatianaMessage';

export default function TypologyResults() {
  const [profile, setProfile] = useState(null);
  const [demographics, setDemographics] = useState(null);
  const [showTatianaMessage, setShowTatianaMessage] = useState(false);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    if (typeof window === 'undefined') return;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø—Å–∏—Ö–æ—Ç–∏–ø–∞
    const savedProfile = localStorage.getItem('benehab_typology_profile');
    if (savedProfile) {
      try {
        setProfile(JSON.parse(savedProfile));
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', e);
      }
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    const savedDemographics = localStorage.getItem('benehab_demographics');
    if (savedDemographics) {
      try {
        setDemographics(JSON.parse(savedDemographics));
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö:', e);
      }
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¢–∞—Ç—å—è–Ω—ã —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
      setShowTatianaMessage(true);
    }, 1000);
  }, []);

  const closeTatianaMessage = () => {
    setShowTatianaMessage(false);
  };

  if (!profile) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üß†</div>
          <h1 className="text-2xl font-bold text-gray-900 mb-4">–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
          <p className="text-gray-600 mb-6">–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –æ–ø—Ä–æ—Å –ø—Å–∏—Ö–æ—Ç–∏–ø–∞</p>
          <Link
            href="/profiling/typology"
            className="inline-flex items-center px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
          >
            –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
          </Link>
        </div>
      </div>
    );
  }

  const getTypeName = (type) => {
    const typeNames = {
      sensitive: '–°–µ–Ω—Å–∏—Ç–∏–≤–Ω—ã–π',
      dysthymic: '–î–∏—Å—Ç–∏–º–∏—á–µ—Å–∫–∏–π',
      demonstrative: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π',
      excitable: '–í–æ–∑–±—É–¥–∏–º—ã–π',
      cyclothymic: '–¶–∏–∫–ª–æ—Ç–∏–º–∏—á–µ—Å–∫–∏–π',
      stuck: '–ó–∞—Å—Ç—Ä–µ–≤–∞—é—â–∏–π',
      pedantic: '–ü–µ–¥–∞–Ω—Ç–∏—á–Ω—ã–π',
      anxious: '–¢—Ä–µ–≤–æ–∂–Ω—ã–π',
      hyperthymic: '–ì–∏–ø–µ—Ä—Ç–∏–º–∏—á–µ—Å–∫–∏–π'
    };
    return typeNames[type] || type;
  };

  const getTypeDescription = (type) => {
    const descriptions = {
      sensitive: '–†–∞–Ω–∏–º–æ—Å—Ç—å, –≤—ã—Å–æ–∫–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ —Å–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∂–∞–ª–æ–±–∞–º –∏ —É—Å—Ç–∞–ª–æ—Å—Ç–∏.',
      dysthymic: '–°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–µ, —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã, –Ω–∏–∑–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è.',
      demonstrative: '–õ—é–±–æ–≤—å –∫ –≤–Ω–∏–º–∞–Ω–∏—é, —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ.',
      excitable: '–ò–º–ø—É–ª—å—Å–∏–≤–Ω–æ—Å—Ç—å, –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤—Å–ø—ã—à–∫–∏.',
      cyclothymic: '–ü–µ—Ä–µ–º–µ–Ω—á–∏–≤–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.',
      stuck: '–£–ø–æ—Ä—Å—Ç–≤–æ, –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ—Å—Ç—å, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π.',
      pedantic: '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å, –ª—é–±–æ–≤—å –∫ –ø–æ—Ä—è–¥–∫—É, –¥–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å.',
      anxious: '–°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤—É, –º–Ω–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.',
      hyperthymic: '–≠–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å, –æ–ø—Ç–∏–º–∏–∑–º, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.'
    };
    return descriptions[type] || '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.';
  };

  const getTypeColor = (type) => {
    const colors = {
      sensitive: 'bg-pink-100 text-pink-800 border-pink-200',
      dysthymic: 'bg-blue-100 text-blue-800 border-blue-200',
      demonstrative: 'bg-purple-100 text-purple-800 border-purple-200',
      excitable: 'bg-red-100 text-red-800 border-red-200',
      cyclothymic: 'bg-yellow-100 text-yellow-800 border-yellow-200',
      stuck: 'bg-orange-100 text-orange-800 border-orange-200',
      pedantic: 'bg-indigo-100 text-indigo-800 border-indigo-200',
      anxious: 'bg-gray-100 text-gray-800 border-gray-200',
      hyperthymic: 'bg-green-100 text-green-800 border-green-200'
    };
    return colors[type] || 'bg-gray-100 text-gray-800 border-gray-200';
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50">
      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞: –ü—Å–∏—Ö–æ—Ç–∏–ø
          </h1>
          <p className="text-lg text-gray-600">
            –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–∏–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω
          </p>
        </div>

        {/* –î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ç–∏–ø */}
        {profile.dominant_type && (
          <div className="bg-white rounded-lg shadow-lg border p-6 mb-8">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">–í–∞—à –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ø—Å–∏—Ö–æ—Ç–∏–ø</h2>
            <div className={`border rounded-lg p-6 ${getTypeColor(profile.dominant_type)}`}>
              <h3 className="text-2xl font-bold mb-3">
                {getTypeName(profile.dominant_type)}
              </h3>
              <p className="text-lg leading-relaxed">
                {getTypeDescription(profile.dominant_type)}
              </p>
            </div>
          </div>
        )}

        {/* –í—Å–µ —Ç–∏–ø—ã —Å –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ */}
        {profile.types && (
          <div className="bg-white rounded-lg shadow-lg border p-6 mb-8">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">–í—Å–µ –ø—Å–∏—Ö–æ—Ç–∏–ø—ã</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {Object.entries(profile.types).map(([type, value]) => (
                <div key={type} className="p-4 border border-gray-200 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-sm font-medium text-gray-700">
                      {getTypeName(type)}
                    </span>
                    <span className={`text-lg font-bold ${
                      value > 0.6 ? 'text-green-600' : value > 0.3 ? 'text-yellow-600' : 'text-gray-600'
                    }`}>
                      {Math.round(value * 100)}%
                    </span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className={`h-2 rounded-full ${
                        value > 0.6 ? 'bg-green-500' : value > 0.3 ? 'bg-yellow-500' : 'bg-gray-400'
                      }`}
                      style={{ width: `${value * 100}%` }}
                    ></div>
                  </div>
                  <p className="text-xs text-gray-500 mt-1">
                    {value > 0.6 ? '–í—ã—Å–æ–∫–∏–π' : value > 0.3 ? '–°—Ä–µ–¥–Ω–∏–π' : '–ù–∏–∑–∫–∏–π'} —É—Ä–æ–≤–µ–Ω—å
                  </p>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—â–µ–Ω–∏—é */}
        <div className="bg-white rounded-lg shadow-lg border p-6 mb-8">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—â–µ–Ω–∏—é</h2>
          <div className="space-y-4">
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-green-600 text-sm">‚úì</span>
              </div>
              <div>
                <h3 className="font-medium text-gray-900">–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å—Ç–∏–ª—è</h3>
                <p className="text-gray-600">
                  –¢–∞—Ç—å—è–Ω–∞ –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –ø—Å–∏—Ö–æ—Ç–∏–ø–∞ –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è 
                  –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
                </p>
              </div>
            </div>
            <div className="flex items-start space-x-3">
              <div className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                <span className="text-blue-600 text-sm">üí°</span>
              </div>
              <div>
                <h3 className="font-medium text-gray-900">–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h3>
                <p className="text-gray-600">
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–π–¥—è –æ–ø—Ä–æ—Å —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω—ã 
                  –≤–∞—à–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ —Å–∏—Å—Ç–µ–º—ã —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π.
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <Link
            href="/profiling/values"
            className="inline-flex items-center justify-center px-6 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
          >
            <span className="mr-2">üíé</span>
            –°–ª–µ–¥—É—é—â–∏–π –æ–ø—Ä–æ—Å: –¶–µ–Ω–Ω–æ—Å—Ç–∏
          </Link>
          <Link
            href="/communication-instructions"
            className="inline-flex items-center justify-center px-6 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors"
          >
            <span className="mr-2">üìã</span>
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ–±—â–µ–Ω–∏—é
          </Link>
          <Link
            href="/"
            className="inline-flex items-center justify-center px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
          >
            <span className="mr-2">üè†</span>
            –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¢–∞—Ç—å—è–Ω—ã */}
      <TatianaMessage
        demographics={demographics}
        surveyType="typology"
        surveyResults={profile}
        isVisible={showTatianaMessage}
        onClose={closeTatianaMessage}
      />
    </div>
  );
}
